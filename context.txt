// JOB: 1 (0x1) Priority: 2
1: RD Rs5 Rs0 0x5c		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x5c		// Load immediate value
6: LDI Rb0 Rd13 0xdc		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xdc		// Load immediate value
16: LW Rb9 Rd7 0x0		// Loading content of register
17: ADD Rs0 Rs7 Rd0		// Adding content of register
18: ADDI Rb0 Rd6 0x1		// Add immediate value
19: ADDI Rb0 Rd9 0x4		// Add immediate value
20: SLT Rs6 Rs5 Rd8		// Set content of register
21: BNE Rb8 Rd1 0x3c		// Branch to
22: WR Rs0 Rs0 0xac		// Writing
23: HTL 0x0		// Halt program, logical end
// DATA for Job 1:
1: 10
2: 6
3: 44
4: 69
5: 1
6: 7
7: 0
8: 1
9: 5
10: 10
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 2
26: 23
27: -1170204176
28: 32714
29: 44
30: 0
31: -1170204032
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 2
38: 28
39: 4
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #1
// JOB: 2 (0x2) Priority: 4
1: RD Rs5 Rs0 0x70		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x70		// Load immediate value
6: LDI Rb0 Rd13 0xf0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xf0		// Load immediate value
16: LW Rb9 Rd0 0x0		// Loading content of register
17: ADDI Rb0 Rd6 0x1		// Add immediate value
18: ADDI Rb0 Rd9 0x4		// Add immediate value
19: LW Rb9 Rd2 0x0		// Loading content of register
20: ADDI Rb0 Rd6 0x1		// Add immediate value
21: ADDI Rb0 Rd9 0x4		// Add immediate value
22: SLT Rs0 Rs2 Rd8		// Set content of register
23: BEQ Rb8 Rd1 0x60		// Branch to
24: MOV Rs0 Rs2 Rd0		// Moving content of register
25: SLT Rs6 Rs5 Rd8		// Set content of register
26: BNE Rb8 Rd1 0x48		// Branch to
27: WR Rs0 Rs0 0xc0		// Writing
28: HTL 0x0		// Halt program, logical end
// DATA for Job 2:
1: 10
2: 6
3: 44
4: 69
5: 1
6: 7
7: 0
8: 1
9: 5
10: 10
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 4
26: 28
27: -1170203840
28: 32714
29: 44
30: 0
31: -1170203680
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 3
38: 24
39: 6
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #2
// JOB: 3 (0x3) Priority: 6
1: RD Rs5 Rs0 0x60		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x60		// Load immediate value
6: LDI Rb0 Rd13 0xe0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xe0		// Load immediate value
16: LW Rb9 Rd7 0x0		// Loading content of register
17: ADD Rs0 Rs7 Rd0		// Adding content of register
18: ADDI Rb0 Rd6 0x1		// Add immediate value
19: ADDI Rb0 Rd9 0x4		// Add immediate value
20: SLT Rs6 Rs5 Rd8		// Set content of register
21: BNE Rb8 Rd1 0x3c		// Branch to
22: DIV Rs0 Rs5 Rd0		// Dividing content of register
23: WR Rs0 Rs0 0xb0		// Writing
24: HTL 0x0		// Halt program, logical end
// DATA for Job 3:
1: 10
2: 6
3: 44
4: 69
5: 1
6: 9
7: 176
8: 1
9: 7
10: 170
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 6
26: 24
27: -1170203488
28: 32714
29: 44
30: 0
31: -1170203344
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 4
38: 19
39: 5
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #3
// JOB: 4 (0x4) Priority: 5
1: RD Rs5 Rs0 0x4c		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd0 0x0		// Move immediate value
4: MOVI Rb0 Rd1 0x0		// Move immediate value
5: MOVI Rb0 Rd2 0x0		// Move immediate value
6: MOVI Rb0 Rd3 0x1		// Move immediate value
7: LDI Rb0 Rd7 0x9c		// Load immediate value
8: WR Rs2 Rs7 0x0		// Writing
9: ADDI Rb0 Rd7 0x4		// Add immediate value
10: ADDI Rb0 Rd6 0x1		// Add immediate value
11: ADD Rs3 Rs2 Rd0		// Adding content of register
12: WR Rs0 Rs7 0x0		// Writing
13: ADDI Rb0 Rd7 0x4		// Add immediate value
14: ADDI Rb0 Rd6 0x1		// Add immediate value
15: MOV Rs2 Rs3 Rd0		// Moving content of register
16: MOV Rs3 Rs0 Rd0		// Moving content of register
17: SLT Rs6 Rs5 Rd8		// Set content of register
18: BNE Rb8 Rd1 0x28		// Branch to
19: HTL 0x0		// Halt program, logical end
// DATA for Job 4:
1: 11
2: 0
3: 0
4: 0
5: 0
6: 0
7: 0
8: 0
9: 0
10: 0
11: 0
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 5
26: 19
27: -1170203152
28: 32714
29: 44
30: 0
31: -1170203024
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 5
38: 28
39: 3
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #4
// JOB: 5 (0x5) Priority: 3
1: RD Rs5 Rs0 0x70		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x70		// Load immediate value
6: LDI Rb0 Rd13 0xf0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xf0		// Load immediate value
16: LW Rb9 Rd0 0x0		// Loading content of register
17: ADDI Rb0 Rd6 0x1		// Add immediate value
18: ADDI Rb0 Rd9 0x4		// Add immediate value
19: LW Rb9 Rd2 0x0		// Loading content of register
20: ADDI Rb0 Rd6 0x1		// Add immediate value
21: ADDI Rb0 Rd9 0x4		// Add immediate value
22: SLT Rs0 Rs2 Rd8		// Set content of register
23: BEQ Rb8 Rd1 0x60		// Branch to
24: MOV Rs0 Rs2 Rd0		// Moving content of register
25: SLT Rs6 Rs5 Rd8		// Set content of register
26: BNE Rb8 Rd1 0x48		// Branch to
27: WR Rs0 Rs0 0xc0		// Writing
28: HTL 0x0		// Halt program, logical end
// DATA for Job 5:
1: 10
2: 6
3: 44
4: 69
5: 1
6: 23
7: 0
8: 1
9: 5
10: 170
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 3
26: 28
27: -1170202832
28: 32714
29: 44
30: 0
31: -1170202672
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 6
38: 24
39: 7
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #5
// JOB: 6 (0x6) Priority: 7
1: RD Rs5 Rs0 0x60		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x60		// Load immediate value
6: LDI Rb0 Rd13 0xe0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xe0		// Load immediate value
16: LW Rb9 Rd7 0x0		// Loading content of register
17: ADD Rs0 Rs7 Rd0		// Adding content of register
18: ADDI Rb0 Rd6 0x1		// Add immediate value
19: ADDI Rb0 Rd9 0x4		// Add immediate value
20: SLT Rs6 Rs5 Rd8		// Set content of register
21: BNE Rb8 Rd1 0x3c		// Branch to
22: DIV Rs0 Rs5 Rd0		// Dividing content of register
23: WR Rs0 Rs0 0xb0		// Writing
24: HTL 0x0		// Halt program, logical end
// DATA for Job 6:
1: 10
2: 13
3: 44
4: 69
5: 222
6: 9
7: 176
8: 1
9: 7
10: 170
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 7
26: 24
27: -1170202480
28: 32714
29: 44
30: 0
31: -1170202336
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 7
38: 19
39: 5
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #6
// JOB: 7 (0x7) Priority: 5
1: RD Rs5 Rs0 0x4c		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd0 0x0		// Move immediate value
4: MOVI Rb0 Rd1 0x0		// Move immediate value
5: MOVI Rb0 Rd2 0x0		// Move immediate value
6: MOVI Rb0 Rd3 0x1		// Move immediate value
7: LDI Rb0 Rd7 0x9c		// Load immediate value
8: WR Rs2 Rs7 0x0		// Writing
9: ADDI Rb0 Rd7 0x4		// Add immediate value
10: ADDI Rb0 Rd6 0x1		// Add immediate value
11: ADD Rs3 Rs2 Rd0		// Adding content of register
12: WR Rs0 Rs7 0x0		// Writing
13: ADDI Rb0 Rd7 0x4		// Add immediate value
14: ADDI Rb0 Rd6 0x1		// Add immediate value
15: MOV Rs0 Rs2 Rd3		// Moving content of register
16: MOV Rs0 Rs0 Rd2		// Moving content of register
17: SLT Rs6 Rs5 Rd8		// Set content of register
18: BNE Rb8 Rd1 0x28		// Branch to
19: HTL 0x0		// Halt program, logical end
// DATA for Job 7:
1: 11
2: 0
3: 0
4: 0
5: 0
6: 0
7: 0
8: 0
9: 0
10: 0
11: 0
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 5
26: 19
27: -1170202144
28: 32714
29: 44
30: 0
31: -1170202016
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 8
38: 19
39: 16
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #7
// JOB: 8 (0x8) Priority: 16
1: RD Rs5 Rs0 0x4c		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd0 0x0		// Move immediate value
4: MOVI Rb0 Rd1 0x0		// Move immediate value
5: MOVI Rb0 Rd2 0x0		// Move immediate value
6: MOVI Rb0 Rd3 0x1		// Move immediate value
7: LDI Rb0 Rd7 0x9c		// Load immediate value
8: WR Rs2 Rs7 0x0		// Writing
9: ADDI Rb0 Rd7 0x4		// Add immediate value
10: ADDI Rb0 Rd6 0x1		// Add immediate value
11: ADD Rs3 Rs2 Rd0		// Adding content of register
12: WR Rs0 Rs7 0x0		// Writing
13: ADDI Rb0 Rd7 0x4		// Add immediate value
14: ADDI Rb0 Rd6 0x1		// Add immediate value
15: MOV Rs2 Rs3 Rd0		// Moving content of register
16: MOV Rs3 Rs0 Rd0		// Moving content of register
17: SLT Rs6 Rs5 Rd8		// Set content of register
18: BNE Rb8 Rd1 0x28		// Branch to
19: HTL 0x0		// Halt program, logical end
// DATA for Job 8:
1: 11
2: 0
3: 0
4: 0
5: 0
6: 0
7: 0
8: 0
9: 0
10: 0
11: 0
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 16
26: 19
27: -1170201824
28: 32714
29: 44
30: 0
31: -1169162192
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 9
38: 24
39: 2
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #8
// JOB: 9 (0x9) Priority: 2
1: RD Rs5 Rs0 0x60		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x60		// Load immediate value
6: LDI Rb0 Rd13 0xe0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xe0		// Load immediate value
16: LW Rb9 Rd7 0x0		// Loading content of register
17: ADD Rs0 Rs7 Rd0		// Adding content of register
18: ADDI Rb0 Rd6 0x1		// Add immediate value
19: ADDI Rb0 Rd9 0x4		// Add immediate value
20: SLT Rs6 Rs5 Rd8		// Set content of register
21: BNE Rb8 Rd1 0x3c		// Branch to
22: DIV Rs0 Rs5 Rd0		// Dividing content of register
23: WR Rs0 Rs0 0xb0		// Writing
24: HTL 0x0		// Halt program, logical end
// DATA for Job 9:
1: 10
2: 6
3: 44
4: 69
5: 1
6: 9
7: 176
8: 1
9: 7
10: 170
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 2
26: 24
27: -1169162000
28: 32714
29: 44
30: 0
31: -1169161856
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 10
38: 28
39: 10
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #9
// JOB: 10 (0xa) Priority: 10
1: RD Rs5 Rs0 0x70		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x70		// Load immediate value
6: LDI Rb0 Rd13 0xf0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xf0		// Load immediate value
16: LW Rb9 Rd0 0x0		// Loading content of register
17: ADDI Rb0 Rd6 0x1		// Add immediate value
18: ADDI Rb0 Rd9 0x4		// Add immediate value
19: LW Rb9 Rd2 0x0		// Loading content of register
20: ADDI Rb0 Rd6 0x1		// Add immediate value
21: ADDI Rb0 Rd9 0x4		// Add immediate value
22: SLT Rs0 Rs2 Rd8		// Set content of register
23: BEQ Rb8 Rd1 0x60		// Branch to
24: MOV Rs0 Rs2 Rd0		// Moving content of register
25: SLT Rs6 Rs5 Rd8		// Set content of register
26: BNE Rb8 Rd1 0x48		// Branch to
27: WR Rs0 Rs0 0xc0		// Writing
28: HTL 0x0		// Halt program, logical end
// DATA for Job 10:
1: 10
2: 6
3: 44
4: 69
5: 1
6: 7
7: 0
8: 1
9: 5
10: 10
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 10
26: 28
27: -1169161664
28: 32714
29: 44
30: 0
31: -1169161504
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 11
38: 23
39: 3
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #10
// JOB: 11 (0xb) Priority: 3
1: RD Rs5 Rs0 0x5c		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x5c		// Load immediate value
6: LDI Rb0 Rd13 0xdc		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xdc		// Load immediate value
16: LW Rb9 Rd7 0x0		// Loading content of register
17: ADD Rs0 Rs7 Rd0		// Adding content of register
18: ADDI Rb0 Rd6 0x1		// Add immediate value
19: ADDI Rb0 Rd9 0x4		// Add immediate value
20: SLT Rs6 Rs5 Rd8		// Set content of register
21: BNE Rb8 Rd1 0x3c		// Branch to
22: WR Rs0 Rs0 0xac		// Writing
23: HTL 0x0		// Halt program, logical end
// DATA for Job 11:
1: 10
2: 6
3: 44
4: 69
5: 129
6: 231
7: 192
8: 1
9: 101
10: 10
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 3
26: 23
27: -1169161312
28: 32714
29: 44
30: 0
31: -1170201696
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 12
38: 28
39: 9
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #11
// JOB: 12 (0xc) Priority: 9
1: RD Rs5 Rs0 0x70		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x70		// Load immediate value
6: LDI Rb0 Rd13 0xf0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xf0		// Load immediate value
16: LW Rb9 Rd0 0x0		// Loading content of register
17: ADDI Rb0 Rd6 0x1		// Add immediate value
18: ADDI Rb0 Rd9 0x4		// Add immediate value
19: LW Rb9 Rd2 0x0		// Loading content of register
20: ADDI Rb0 Rd6 0x1		// Add immediate value
21: ADDI Rb0 Rd9 0x4		// Add immediate value
22: SLT Rs0 Rs2 Rd8		// Set content of register
23: BEQ Rb8 Rd1 0x60		// Branch to
24: MOV Rs0 Rs2 Rd0		// Moving content of register
25: SLT Rs6 Rs5 Rd8		// Set content of register
26: BNE Rb8 Rd1 0x48		// Branch to
27: WR Rs0 Rs0 0xc0		// Writing
28: HTL 0x0		// Halt program, logical end
// DATA for Job 12:
1: 10
2: 6
3: 44
4: 69
5: 225
6: 23
7: 0
8: 2
9: 5
10: 170
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 9
26: 28
27: -1170201504
28: 32714
29: 44
30: 0
31: -1169161168
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 13
38: 24
39: 12
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #12
// JOB: 13 (0xd) Priority: 12
1: RD Rs5 Rs0 0x60		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x60		// Load immediate value
6: LDI Rb0 Rd13 0xe0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xe0		// Load immediate value
16: LW Rb9 Rd7 0x0		// Loading content of register
17: ADD Rs0 Rs7 Rd0		// Adding content of register
18: ADDI Rb0 Rd6 0x1		// Add immediate value
19: ADDI Rb0 Rd9 0x4		// Add immediate value
20: SLT Rs6 Rs5 Rd8		// Set content of register
21: BNE Rb8 Rd1 0x3c		// Branch to
22: DIV Rs0 Rs5 Rd0		// Dividing content of register
23: WR Rs0 Rs0 0xb0		// Writing
24: HTL 0x0		// Halt program, logical end
// DATA for Job 13:
1: 10
2: 6
3: 44
4: 69
5: 1
6: 9
7: 176
8: 1
9: 7
10: 170
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 12
26: 24
27: -1169160976
28: 32714
29: 44
30: 0
31: -1170201344
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 14
38: 19
39: 2
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #13
// JOB: 14 (0xe) Priority: 2
1: RD Rs5 Rs0 0x4c		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd0 0x0		// Move immediate value
4: MOVI Rb0 Rd1 0x0		// Move immediate value
5: MOVI Rb0 Rd2 0x0		// Move immediate value
6: MOVI Rb0 Rd3 0x1		// Move immediate value
7: LDI Rb0 Rd7 0x9c		// Load immediate value
8: WR Rs2 Rs7 0x0		// Writing
9: ADDI Rb0 Rd7 0x4		// Add immediate value
10: ADDI Rb0 Rd6 0x1		// Add immediate value
11: ADD Rs3 Rs2 Rd0		// Adding content of register
12: WR Rs0 Rs7 0x0		// Writing
13: ADDI Rb0 Rd7 0x4		// Add immediate value
14: ADDI Rb0 Rd6 0x1		// Add immediate value
15: MOV Rs2 Rs3 Rd0		// Moving content of register
16: MOV Rs3 Rs0 Rd0		// Moving content of register
17: SLT Rs6 Rs5 Rd8		// Set content of register
18: BNE Rb8 Rd1 0x28		// Branch to
19: HTL 0x0		// Halt program, logical end
// DATA for Job 14:
1: 9
2: 0
3: 0
4: 0
5: 0
6: 0
7: 0
8: 0
9: 0
10: 0
11: 0
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 2
26: 19
27: -1170201152
28: 32714
29: 44
30: 0
31: -1170201024
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 15
38: 24
39: 5
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #14
// JOB: 15 (0xf) Priority: 5
1: RD Rs5 Rs0 0x60		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x60		// Load immediate value
6: LDI Rb0 Rd13 0xe0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xe0		// Load immediate value
16: LW Rb9 Rd7 0x0		// Loading content of register
17: ADD Rs0 Rs7 Rd0		// Adding content of register
18: ADDI Rb0 Rd6 0x1		// Add immediate value
19: ADDI Rb0 Rd9 0x4		// Add immediate value
20: SLT Rs6 Rs5 Rd8		// Set content of register
21: BNE Rb8 Rd1 0x3c		// Branch to
22: DIV Rs0 Rs5 Rd0		// Dividing content of register
23: WR Rs0 Rs0 0xb0		// Writing
24: HTL 0x0		// Halt program, logical end
// DATA for Job 15:
1: 9
2: 6
3: 44
4: 69
5: 1
6: 9
7: 176
8: 1
9: 7
10: 170
11: 0
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 5
26: 24
27: -1170200832
28: 32714
29: 44
30: 0
31: -1168113616
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 16
38: 19
39: 8
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #15
// JOB: 16 (0x10) Priority: 8
1: RD Rs5 Rs0 0x4c		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd0 0x0		// Move immediate value
4: MOVI Rb0 Rd1 0x0		// Move immediate value
5: MOVI Rb0 Rd2 0x0		// Move immediate value
6: MOVI Rb0 Rd3 0x1		// Move immediate value
7: LDI Rb0 Rd7 0x9c		// Load immediate value
8: WR Rs2 Rs7 0x0		// Writing
9: ADDI Rb0 Rd7 0x4		// Add immediate value
10: ADDI Rb0 Rd6 0x1		// Add immediate value
11: ADD Rs3 Rs2 Rd0		// Adding content of register
12: WR Rs0 Rs7 0x0		// Writing
13: ADDI Rb0 Rd7 0x4		// Add immediate value
14: ADDI Rb0 Rd6 0x1		// Add immediate value
15: MOV Rs2 Rs3 Rd0		// Moving content of register
16: MOV Rs3 Rs0 Rd0		// Moving content of register
17: SLT Rs6 Rs5 Rd8		// Set content of register
18: BNE Rb8 Rd1 0x28		// Branch to
19: HTL 0x0		// Halt program, logical end
// DATA for Job 16:
1: 4
2: 0
3: 0
4: 0
5: 0
6: 0
7: 0
8: 0
9: 0
10: 0
11: 0
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 8
26: 19
27: -1168113424
28: 32714
29: 44
30: 0
31: -1168113296
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 17
38: 28
39: 4
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #16
// JOB: 17 (0x11) Priority: 4
1: RD Rs5 Rs0 0x70		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x70		// Load immediate value
6: LDI Rb0 Rd13 0xf0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xf0		// Load immediate value
16: LW Rb9 Rd0 0x0		// Loading content of register
17: ADDI Rb0 Rd6 0x1		// Add immediate value
18: ADDI Rb0 Rd9 0x4		// Add immediate value
19: LW Rb9 Rd2 0x0		// Loading content of register
20: ADDI Rb0 Rd6 0x1		// Add immediate value
21: ADDI Rb0 Rd9 0x4		// Add immediate value
22: SLT Rs0 Rs2 Rd8		// Set content of register
23: BEQ Rb8 Rd1 0x60		// Branch to
24: MOV Rs0 Rs2 Rd0		// Moving content of register
25: SLT Rs6 Rs5 Rd8		// Set content of register
26: BNE Rb8 Rd1 0x48		// Branch to
27: WR Rs0 Rs0 0xc0		// Writing
28: HTL 0x0		// Halt program, logical end
// DATA for Job 17:
1: 10
2: 6
3: 44
4: 69
5: 177
6: 7
7: 156
8: 1
9: 69
10: 10
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 4
26: 28
27: -1168113104
28: 32714
29: 44
30: 0
31: -1167065040
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 18
38: 24
39: 12
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #17
// JOB: 18 (0x12) Priority: 12
1: RD Rs5 Rs0 0x60		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x60		// Load immediate value
6: LDI Rb0 Rd13 0xe0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xe0		// Load immediate value
16: LW Rb9 Rd7 0x0		// Loading content of register
17: ADD Rs0 Rs7 Rd0		// Adding content of register
18: ADDI Rb0 Rd6 0x1		// Add immediate value
19: ADDI Rb0 Rd9 0x4		// Add immediate value
20: SLT Rs6 Rs5 Rd8		// Set content of register
21: BNE Rb8 Rd1 0x3c		// Branch to
22: DIV Rs0 Rs5 Rd0		// Dividing content of register
23: WR Rs0 Rs0 0xb0		// Writing
24: HTL 0x0		// Halt program, logical end
// DATA for Job 18:
1: 10
2: 6
3: 44
4: 69
5: 1
6: 9
7: 176
8: 1
9: 7
10: 170
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 12
26: 24
27: -1167064848
28: 32714
29: 44
30: 0
31: -1167064704
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 19
38: 28
39: 1
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #18
// JOB: 19 (0x13) Priority: 1
1: RD Rs5 Rs0 0x70		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x70		// Load immediate value
6: LDI Rb0 Rd13 0xf0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xf0		// Load immediate value
16: LW Rb9 Rd0 0x0		// Loading content of register
17: ADDI Rb0 Rd6 0x1		// Add immediate value
18: ADDI Rb0 Rd9 0x4		// Add immediate value
19: LW Rb9 Rd2 0x0		// Loading content of register
20: ADDI Rb0 Rd6 0x1		// Add immediate value
21: ADDI Rb0 Rd9 0x4		// Add immediate value
22: SLT Rs0 Rs2 Rd8		// Set content of register
23: BEQ Rb8 Rd1 0x60		// Branch to
24: MOV Rs0 Rs2 Rd0		// Moving content of register
25: SLT Rs6 Rs5 Rd8		// Set content of register
26: BNE Rb8 Rd1 0x48		// Branch to
27: WR Rs0 Rs0 0xc0		// Writing
28: HTL 0x0		// Halt program, logical end
// DATA for Job 19:
1: 8
2: 6
3: 44
4: 69
5: 1
6: 7
7: 0
8: 1
9: 5
10: 0
11: 0
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 1
26: 28
27: -1167064512
28: 32714
29: 44
30: 0
31: -1170200688
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 20
38: 24
39: 2
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #19
// JOB: 20 (0x14) Priority: 2
1: RD Rs5 Rs0 0x60		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x60		// Load immediate value
6: LDI Rb0 Rd13 0xe0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xe0		// Load immediate value
16: LW Rb9 Rd7 0x0		// Loading content of register
17: ADD Rs0 Rs7 Rd0		// Adding content of register
18: ADDI Rb0 Rd6 0x1		// Add immediate value
19: ADDI Rb0 Rd9 0x4		// Add immediate value
20: SLT Rs6 Rs5 Rd8		// Set content of register
21: BNE Rb8 Rd1 0x3c		// Branch to
22: DIV Rs0 Rs5 Rd0		// Dividing content of register
23: WR Rs0 Rs0 0xb0		// Writing
24: HTL 0x0		// Halt program, logical end
// DATA for Job 20:
1: 10
2: 6
3: 44
4: 69
5: 1
6: 9
7: 176
8: 1
9: 7
10: 170
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 2
26: 24
27: -1170200496
28: 32714
29: 44
30: 0
31: -1170200352
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 21
38: 19
39: 4
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #20
// JOB: 21 (0x15) Priority: 4
1: RD Rs5 Rs0 0x4c		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd0 0x0		// Move immediate value
4: MOVI Rb0 Rd1 0x0		// Move immediate value
5: MOVI Rb0 Rd2 0x0		// Move immediate value
6: MOVI Rb0 Rd3 0x1		// Move immediate value
7: LDI Rb0 Rd7 0x9c		// Load immediate value
8: WR Rs2 Rs7 0x0		// Writing
9: ADDI Rb0 Rd7 0x4		// Add immediate value
10: ADDI Rb0 Rd6 0x1		// Add immediate value
11: ADD Rs3 Rs2 Rd0		// Adding content of register
12: WR Rs0 Rs7 0x0		// Writing
13: ADDI Rb0 Rd7 0x4		// Add immediate value
14: ADDI Rb0 Rd6 0x1		// Add immediate value
15: MOV Rs2 Rs3 Rd0		// Moving content of register
16: MOV Rs3 Rs0 Rd0		// Moving content of register
17: SLT Rs6 Rs5 Rd8		// Set content of register
18: BNE Rb8 Rd1 0x28		// Branch to
19: HTL 0x0		// Halt program, logical end
// DATA for Job 21:
1: 12
2: 0
3: 0
4: 0
5: 0
6: 0
7: 0
8: 0
9: 0
10: 0
11: 0
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 4
26: 19
27: -1170200160
28: 32714
29: 44
30: 0
31: -1167064352
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 22
38: 28
39: 10
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #21
// JOB: 22 (0x16) Priority: 10
1: RD Rs5 Rs0 0x70		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x70		// Load immediate value
6: LDI Rb0 Rd13 0xf0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xf0		// Load immediate value
16: LW Rb9 Rd0 0x0		// Loading content of register
17: ADDI Rb0 Rd6 0x1		// Add immediate value
18: ADDI Rb0 Rd9 0x4		// Add immediate value
19: LW Rb9 Rd2 0x0		// Loading content of register
20: ADDI Rb0 Rd6 0x1		// Add immediate value
21: ADDI Rb0 Rd9 0x4		// Add immediate value
22: SLT Rs0 Rs2 Rd8		// Set content of register
23: BEQ Rb8 Rd1 0x60		// Branch to
24: MOV Rs0 Rs2 Rd0		// Moving content of register
25: SLT Rs6 Rs5 Rd8		// Set content of register
26: BNE Rb8 Rd1 0x48		// Branch to
27: WR Rs0 Rs0 0xc0		// Writing
28: HTL 0x0		// Halt program, logical end
// DATA for Job 22:
1: 10
2: 6
3: 44
4: 69
5: 1
6: 7
7: 0
8: 1
9: 5
10: 10
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 10
26: 28
27: -1167064160
28: 32714
29: 44
30: 0
31: -1170200032
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 23
38: 23
39: 5
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #22
// JOB: 23 (0x17) Priority: 5
1: RD Rs5 Rs0 0x5c		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x5c		// Load immediate value
6: LDI Rb0 Rd13 0xdc		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xdc		// Load immediate value
16: LW Rb9 Rd7 0x0		// Loading content of register
17: ADD Rs0 Rs7 Rd0		// Adding content of register
18: ADDI Rb0 Rd6 0x1		// Add immediate value
19: ADDI Rb0 Rd9 0x4		// Add immediate value
20: SLT Rs6 Rs5 Rd8		// Set content of register
21: BNE Rb8 Rd1 0x3c		// Branch to
22: WR Rs0 Rs0 0xac		// Writing
23: HTL 0x0		// Halt program, logical end
// DATA for Job 23:
1: 9
2: 6
3: 44
4: 69
5: 1
6: 7
7: 0
8: 1
9: 5
10: 10
11: 0
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 5
26: 23
27: -1170199840
28: 32714
29: 44
30: 0
31: -1167064000
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 24
38: 24
39: 7
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #23
// JOB: 24 (0x18) Priority: 7
1: RD Rs5 Rs0 0x60		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x60		// Load immediate value
6: LDI Rb0 Rd13 0xe0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xe0		// Load immediate value
16: LW Rb9 Rd7 0x0		// Loading content of register
17: ADD Rs0 Rs7 Rd0		// Adding content of register
18: ADDI Rb0 Rd6 0x1		// Add immediate value
19: ADDI Rb0 Rd9 0x4		// Add immediate value
20: SLT Rs6 Rs5 Rd8		// Set content of register
21: BNE Rb8 Rd1 0x3c		// Branch to
22: DIV Rs0 Rs5 Rd0		// Dividing content of register
23: WR Rs0 Rs0 0xb0		// Writing
24: HTL 0x0		// Halt program, logical end
// DATA for Job 24:
1: 10
2: 6
3: 44
4: 69
5: 1
6: 9
7: 176
8: 1
9: 7
10: 170
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 7
26: 24
27: -1167063808
28: 32714
29: 44
30: 0
31: -1167063664
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 25
38: 23
39: 9
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #24
// JOB: 25 (0x19) Priority: 9
1: RD Rs5 Rs0 0x5c		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x5c		// Load immediate value
6: LDI Rb0 Rd13 0xdc		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xdc		// Load immediate value
16: LW Rb9 Rd7 0x0		// Loading content of register
17: ADD Rs0 Rs7 Rd0		// Adding content of register
18: ADDI Rb0 Rd6 0x1		// Add immediate value
19: ADDI Rb0 Rd9 0x4		// Add immediate value
20: SLT Rs6 Rs5 Rd8		// Set content of register
21: BNE Rb8 Rd1 0x3c		// Branch to
22: WR Rs0 Rs0 0xac		// Writing
23: HTL 0x0		// Halt program, logical end
// DATA for Job 25:
1: 5
2: 6
3: 44
4: 69
5: 1
6: 7
7: 0
8: 0
9: 0
10: 0
11: 0
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 9
26: 23
27: -1167063472
28: 32714
29: 44
30: 0
31: -1169160832
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 26
38: 19
39: 4
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #25
// JOB: 26 (0x1a) Priority: 4
1: RD Rs5 Rs0 0x4c		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd0 0x0		// Move immediate value
4: MOVI Rb0 Rd1 0x0		// Move immediate value
5: MOVI Rb0 Rd2 0x0		// Move immediate value
6: MOVI Rb0 Rd3 0x1		// Move immediate value
7: LDI Rb0 Rd7 0x9c		// Load immediate value
8: WR Rs2 Rs7 0x0		// Writing
9: ADDI Rb0 Rd7 0x4		// Add immediate value
10: ADDI Rb0 Rd6 0x1		// Add immediate value
11: ADD Rs3 Rs2 Rd0		// Adding content of register
12: WR Rs0 Rs7 0x0		// Writing
13: ADDI Rb0 Rd7 0x4		// Add immediate value
14: ADDI Rb0 Rd6 0x1		// Add immediate value
15: MOV Rs2 Rs3 Rd0		// Moving content of register
16: MOV Rs3 Rs0 Rd0		// Moving content of register
17: SLT Rs6 Rs5 Rd8		// Set content of register
18: BNE Rb8 Rd1 0x28		// Branch to
19: HTL 0x0		// Halt program, logical end
// DATA for Job 26:
1: 7
2: 0
3: 0
4: 0
5: 0
6: 0
7: 0
8: 0
9: 0
10: 0
11: 0
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 4
26: 19
27: -1169160640
28: 32714
29: 44
30: 0
31: -1167063328
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 27
38: 23
39: 9
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #26
// JOB: 27 (0x1b) Priority: 9
1: RD Rs5 Rs0 0x5c		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x5c		// Load immediate value
6: LDI Rb0 Rd13 0xdc		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xdc		// Load immediate value
16: LW Rb9 Rd7 0x0		// Loading content of register
17: ADD Rs0 Rs7 Rd0		// Adding content of register
18: ADDI Rb0 Rd6 0x1		// Add immediate value
19: ADDI Rb0 Rd9 0x4		// Add immediate value
20: SLT Rs6 Rs5 Rd8		// Set content of register
21: BNE Rb8 Rd1 0x3c		// Branch to
22: WR Rs0 Rs0 0xac		// Writing
23: HTL 0x0		// Halt program, logical end
// DATA for Job 27:
1: 10
2: 6
3: 44
4: 69
5: 1
6: 7
7: 0
8: 1
9: 5
10: 10
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 9
26: 23
27: -1167063136
28: 32714
29: 44
30: 0
31: -1168112944
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 28
38: 28
39: 3
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #27
// JOB: 28 (0x1c) Priority: 3
1: RD Rs5 Rs0 0x70		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x70		// Load immediate value
6: LDI Rb0 Rd13 0xf0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xf0		// Load immediate value
16: LW Rb9 Rd0 0x0		// Loading content of register
17: ADDI Rb0 Rd6 0x1		// Add immediate value
18: ADDI Rb0 Rd9 0x4		// Add immediate value
19: LW Rb9 Rd2 0x0		// Loading content of register
20: ADDI Rb0 Rd6 0x1		// Add immediate value
21: ADDI Rb0 Rd9 0x4		// Add immediate value
22: SLT Rs0 Rs2 Rd8		// Set content of register
23: BEQ Rb8 Rd1 0x60		// Branch to
24: MOV Rs0 Rs2 Rd0		// Moving content of register
25: SLT Rs6 Rs5 Rd8		// Set content of register
26: BNE Rb8 Rd1 0x48		// Branch to
27: WR Rs0 Rs0 0xc0		// Writing
28: HTL 0x0		// Halt program, logical end
// DATA for Job 28:
1: 10
2: 6
3: 44
4: 69
5: 1
6: 7
7: 0
8: 225
9: 5
10: 10
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 3
26: 28
27: -1168112752
28: 32714
29: 44
30: 0
31: -1167062992
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 29
38: 24
39: 1
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #28
// JOB: 29 (0x1d) Priority: 1
1: RD Rs5 Rs0 0x60		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd1 0x0		// Move immediate value
4: MOVI Rb0 Rd0 0x0		// Move immediate value
5: LDI Rb0 Rd10 0x60		// Load immediate value
6: LDI Rb0 Rd13 0xe0		// Load immediate value
7: ADDI Rb0 Rd10 0x4		// Add immediate value
8: RD Rs11 Rs10 0x0		// Reading
9: ST Rb11 Rd13 0x0		// Storing content of register
10: ADDI Rb0 Rd13 0x4		// Add immediate value
11: ADDI Rb0 Rd6 0x1		// Add immediate value
12: SLT Rs6 Rs5 Rd8		// Set content of register
13: BNE Rb8 Rd1 0x18		// Branch to
14: MOVI Rb0 Rd6 0x0		// Move immediate value
15: LDI Rb0 Rd9 0xe0		// Load immediate value
16: LW Rb9 Rd7 0x0		// Loading content of register
17: ADD Rs0 Rs7 Rd0		// Adding content of register
18: ADDI Rb0 Rd6 0x1		// Add immediate value
19: ADDI Rb0 Rd9 0x4		// Add immediate value
20: SLT Rs6 Rs5 Rd8		// Set content of register
21: BNE Rb8 Rd1 0x3c		// Branch to
22: DIV Rs0 Rs5 Rd0		// Dividing content of register
23: WR Rs0 Rs0 0xb0		// Writing
24: HTL 0x0		// Halt program, logical end
// DATA for Job 29:
1: 10
2: 6
3: 44
4: 69
5: 1
6: 9
7: 176
8: 17
9: 231
10: 170
11: 85
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 1
26: 24
27: -1167062800
28: 32714
29: 44
30: 0
31: -1170199696
32: 32714
33: 12079
34: 0
35: 0
36: 0
37: 30
38: 19
39: 8
40: 0
41: 30768
42: 0
43: 0
44: 0
// END of Job #29
// JOB: 30 (0x1e) Priority: 8
1: RD Rs5 Rs0 0x4c		// Reading
2: MOVI Rb0 Rd6 0x0		// Move immediate value
3: MOVI Rb0 Rd0 0x0		// Move immediate value
4: MOVI Rb0 Rd1 0x0		// Move immediate value
5: MOVI Rb0 Rd2 0x0		// Move immediate value
6: MOVI Rb0 Rd3 0x1		// Move immediate value
7: LDI Rb0 Rd7 0x9c		// Load immediate value
8: WR Rs2 Rs7 0x0		// Writing
9: ADDI Rb0 Rd7 0x4		// Add immediate value
10: ADDI Rb0 Rd6 0x1		// Add immediate value
11: ADD Rs3 Rs2 Rd0		// Adding content of register
12: WR Rs0 Rs7 0x0		// Writing
13: ADDI Rb0 Rd7 0x4		// Add immediate value
14: ADDI Rb0 Rd6 0x1		// Add immediate value
15: MOV Rs2 Rs3 Rd0		// Moving content of register
16: MOV Rs3 Rs0 Rd0		// Moving content of register
17: SLT Rs6 Rs5 Rd8		// Set content of register
18: BNE Rb8 Rd1 0x28		// Branch to
19: HTL 0x0		// Halt program, logical end
// DATA for Job 30:
1: 10
2: 0
3: 0
4: 0
5: 0
6: 0
7: 0
8: 0
9: 0
10: 0
11: 0
12: 0
13: 0
14: 0
15: 0
16: 0
17: 0
18: 0
19: 0
20: 0
21: 12079
22: 0
23: 0
24: 0
25: 8
26: 19
27: -1170199504
28: 32714
29: 44
30: 0
31: -1169160512
32: 32714
33: 0
34: 0
35: 0
36: 0
37: 0
38: 0
39: 0
40: 0
41: 0
42: 0
43: 0
44: 0
// END of Job #30
